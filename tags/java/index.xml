<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Sera Wang</title><link>https://selfsolo.com/tags/java/</link><description>Recent content in Java on Sera Wang</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 24 Aug 2018 21:14:23 +0800</lastBuildDate><atom:link href="https://selfsolo.com/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Java序列化与反序列化原理</title><link>https://selfsolo.com/p/java%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%9F%E7%90%86/</link><pubDate>Fri, 24 Aug 2018 21:14:23 +0800</pubDate><guid>https://selfsolo.com/p/java%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%9F%E7%90%86/</guid><description>基本 java序列化数据，是通过ObjectOutputStream和ObjectInputStream这两个类来实现的，
举个例子:
要序列化的对象data1
public class data1 implements Serializable { private int id; private String name; private String pwd; private String pwd2; public int getId(){ return id; } public void setId(int id){ this.id = id; } public String getName(){ return name; } public void setName(String name){ this.name = name; } public String getPwd(){ return pwd; } public void setPwd(String pwd){ this.pwd = pwd; } public String getPwd2(){ return pwd2; } public void setPwd2(String pwd2){ this.</description></item></channel></rss>