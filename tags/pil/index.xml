<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PIL on Sera Wang</title><link>https://selfsolo.com/tags/pil/</link><description>Recent content in PIL on Sera Wang</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Dec 2017 21:14:23 +0800</lastBuildDate><atom:link href="https://selfsolo.com/tags/pil/index.xml" rel="self" type="application/rss+xml"/><item><title>Python-PIL库的使用</title><link>https://selfsolo.com/p/python-pil%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 01 Dec 2017 21:14:23 +0800</pubDate><guid>https://selfsolo.com/p/python-pil%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>只记录下我用到的，
from PIL import Image,ImageDraw,ImageChops image = Image.open(“test.jpg”)
打开图片.
image = image.convert(“L”)
转成灰度图片，和黑白图片有区别
左边是convert的结果，右边是黑白（黑0/白255）图片。
image.save(“result.png”)
存储成图片文件
image = image.point( array[] , ‘1’ )
这个array[] 实际上要看你的图片是什么类型的。如果不是PNG最好先转成PNG，或者使用convert(“L”) 把 image 转成灰度图片。
因此，这里的array[] 其实是一个长度为256的数组，也就是代表了0-255灰度值。
这个函数的作用就是图片根据这个数组里每一位灰度值，比如array[27] 为0，那么图片的像素里所有灰度值等于array[27]的像素值都变成0（即变黑），否则就变成1。和二值（0/255）黑白图片很像，但实际上是（0/1）二值图片。
`example:
table = []
for i in range(256):
if i &amp;amp;lt; 180: # 所有灰度值小于180的都置0 table.append(0) else: table.append(1) image = image.point(table,’1’)`
这个例子的结果就是将一张图片里所有灰度值小于180的都变成了黑色（0），其它都变成了像素值为1的颜色。即成了一张灰度图片。
image.size</description></item></channel></rss>