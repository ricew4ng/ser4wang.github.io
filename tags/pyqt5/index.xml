<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pyqt5 on Sera Wang</title><link>https://selfsolo.com/tags/pyqt5/</link><description>Recent content in pyqt5 on Sera Wang</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 24 Jan 2018 21:14:23 +0800</lastBuildDate><atom:link href="https://selfsolo.com/tags/pyqt5/index.xml" rel="self" type="application/rss+xml"/><item><title>Python-PIL库的使用</title><link>https://selfsolo.com/p/python-pil%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 24 Jan 2018 21:14:23 +0800</pubDate><guid>https://selfsolo.com/p/python-pil%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>为了对付比赛，发现别人用qt写出来的应用挺好看的。昨天粗略看了一遍，记得不准确，今天重新开始看文档，一步步来吧。
运行一个最基本的窗口 from PyQt5 import QtWidgets # 导入PyQt5库的QtWidgets通用窗口类 class firstwindow(QtWidgets.QWidget): #新建一个类，继承自QtWidgets.QWidget类方法 def __init__(self): super(firstwindow,self).__init__() #这里要重载一下mywindows,同时也包含了QtWidgets.QWidget的预加载项 import sys app = QtWidgets.QApplication(sys.argv) # pyqt 窗口必须在QApplication方法中使用，否则会报错 # QWidget:Must construct a QApplication before a QWidget windows = firstwindow() #新建一个firstwindow对象，命名为windows windows.show() #让窗口显示出来 sys.exit(app.exec_()) #启动事件循环，类似于Tkinter的mainloop()函数 Qt Designer 因为QtDesigner很方便，可以帮助开发，于是我们接下来就用用看Designer，新建一个Widget然后保存，是ui文件，我们需要用一行代码把它转成py文件
在Python36/Lib/site-packages/PyQt5里打开cmd，
pyuic5 ui文件名 -o 目标py文件名
pyuic5 d:/python/pyqt/widget.ui -o d:/python/pyqt/widget.py
转换后代码:
# -*- coding: utf-8 -*- from PyQt5 import QtCore, QtGui, QtWidgets class Ui_Form(object): def setupUi(self, Form): Form.</description></item></channel></rss>